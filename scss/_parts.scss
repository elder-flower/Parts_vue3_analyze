
// Sassのmin()関数
@function _min($numbers...) {
  @return min($numbers...);
}
// CSSのmin()関数
@function min($values...) {
  @return unquote('min(#{$values})');
}

// Sassのmax()関数
@function _max($numbers...) {
  @return max($numbers...);
}
// CSSのmax()関数
@function max($values...) {
  @return unquote('max(#{$values})');
}


@mixin min_wth( $min_width: 100%, $max_width: 1166px ){
    width: $min_width;
    max-width: $max_width;
}

//縦横中央揃え

@mixin ce(){
    display: flex;
    justify-content: center;
    align-items: center;
}

@mixin ce1(){
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

$baseFontColor:#eee;
$baseBgColor:#000;
$keyColor:#960021;

#container{
    overflow-x: hidden;
    /*以下、IE11用*/
    z-index: 1;
    position: relative;
}
/*===========================================================*/
/*機能編 4-2-4　背景色が伸びる（左から右）　 */
/*===========================================================*/

/*========= ローディング画面のためのCSS ===============*/
#splash {
    position: fixed;
    width: 100%;
    height: 100%;
    background: #000;
    z-index: 9999999;
    text-align:center;
    color:#fff;
}

#splash-logo {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/*========= 画面遷移のためのCSS ===============*/

/*画面遷移アニメーション*/

.splashbg{
    display: none;
}

body.appear .splashbg{
    display: block;
    content: "";
    position:fixed;
    z-index: 9999;
    width: 100%;
    height: 100vh;
    top: 0;
    left: 0;
    transform: scaleX(0);
    background-color: #960021;/*伸びる背景色の設定*/
    animation-name:PageAnime;
    animation-duration:.8s;
    animation-timing-function:ease-in-out;
    animation-fill-mode:forwards;
}

@keyframes PageAnime{
    0% {
        transform-origin:left;
        transform:scaleX(0);
    }
    50% {
        transform-origin:left;
        transform:scaleX(1);
    }
    50.001% {
        transform-origin:right;
    }
    100% {
        transform-origin:right;
        transform:scaleX(0);
    }
}

/*画面遷移の後現れるコンテンツ設定*/
#container{
    opacity: 0;/*はじめは透過0に*/
}

/*bodyにappearクラスがついたら出現*/
body.appear #container{
    animation-name:PageAnimeAppear;
    animation-duration:1s;
    animation-delay: 0.8s;
    animation-fill-mode:forwards;
    opacity: 0;
}

@keyframes PageAnimeAppear{
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

/* font-family */

.logo a,
.gmenu a,
.l-vidual h2,
.l-vidual dt,
.scrolldown1 span,
.l-service h2,
.l-service h3,
.l-news h2,
.l-contact h2,
.footer-logo{
    font-family: 'Oswald', sans-serif;
    letter-spacing: 0.2em;
}
h2{
    font-size: 2rem;
    margin: 0 0 50px 0;
    text-transform: uppercase;
}
.l-header{
    top: 0;
    left: 0;
    position: fixed;/*fixedを設定して固定*/
    height: 70px;/*高さ指定*/
    width:100%;/*横幅指定*/
    z-index: 999;/*最前面へ*/
    /*以下はレイアウトのためのCSS*/
    display: flex;
    justify-content: space-between;
    align-items: center;
    text-align: center;
    padding: 20px 100px 20px 0;
}

.l-header.UpMove{
    position: fixed;
    width:100%;
    animation: UpAnime 0.5s forwards;
}
@keyframes UpAnime{
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-100px);
    }
}
/*　下に下がる動き　*/
.l-header.DownMove{
    position: fixed;
    width:100%;
    animation: DownAnime 0.5s forwards;
}
@keyframes DownAnime{
    from {
        opacity: 0;
        transform: translateY(-100px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
.logo{
    a{
        color: #ddd;
    }
    text-transform: uppercase;
    font-size: 1.5rem;
    padding: 0 0 0 2%; 
    line-height: 1;
    white-space: nowrap;
}

/*==================================================
共通　横並びのための設定
===================================*/

@mixin lineDir(
    $dir: 'bc'
){
    @if $dir == 'bc' {
        bottom: 0;
        left: 10%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: center top;/*上部中央基点*/
    }
    @else if $dir == 'bl' {
        bottom: 16px;
        left: 25%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: left top;/*左上基点*/
    }
    @else if $dir == 'mc' {
        top:50%;
        left: 10%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: center top;/*上部中央基点*/
    }
    @else if $dir == 'ml' {
        top:50%;
        left: 10%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: left top;/*左上基点*/
    }
    @else if $dir == 'tc' {
        top: 0%;
        left: 10%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: center top;/*上部中央基点*/
    }
    @else if $dir == 'tl' {
        top: 0%;
        left: 10%;
        transition: all .3s;
        transform: scale(0, 1);/*X方向0、Y方向1*/
        transform-origin: left top;/*左上基点*/
    }
}



$btnBorderColor: #eee;

.gmenu{
    li{
        a{
            /*線の基点とするためrelativeを指定*/
            position: relative;
        }
        &.current a,
        a:hover{
            &::after{
                transform: scale(1, 1);/*X方向にスケール拡大*/
            }
        }
        a::after{
            content: '';
            /*絶対配置で線の位置を決める*/
            position: absolute;
            @include lineDir( 'bl' );
            /*線の形状*/
            width: 50%;
            height: 1px;
            background:$btnBorderColor;
            /*アニメーションの指定*/
        }
        ul a::after{
            height: 0;
        }
    }
}

/* --------------------------------------------------------------------------------
ドロップダウンメニューのレイアウト
--------------------------------------------------------------------------------*/

$gmenuColor: #eee;

$gmenu2Bg: rgba(255,255,255,0.2);
$gmenu2BgAc:rgba(255,255,255,0.2);

$gmenuLinkHoverColor: #fff;
$gmenuL2LinkColor: #fff;

$gmenuL1Icon: #eee;

$gmenuSpLine: rgba(200,200,255,0.4);
$gmenuL2PcSpLine: rgba(255,255,255,0.4);


/*==ナビゲーション全体の設定*/
.gmenu{
    color:$gmenuColor;
    text-align: center;
}
/*ナビゲーションを横並びに*/
.gmenu ul{
    list-style: none;
    display: flex;
    justify-content: center;
}
/*2階層目以降は横並びにしない*/
.gmenu ul ul{
    display: block;
}
/*下の階層のulや矢印の基点にするためliにrelativeを指定*/
.gmenu ul li{
    position: relative;
}
/*ナビゲーションのリンク設定*/
.gmenu ul li a{
    display: block;
    text-decoration: none;
    padding:20px 35px;
    transition:all .3s;
}
.gmenu ul li a:hover{
    color:$gmenuLinkHoverColor;
}
.gmenu ul li li a{
    padding:10px 35px;
}
/*==矢印の設定*/

/*2階層目を持つliの矢印の設定*/
.gmenu ul li.has-child::before{
    content:'';
    position: absolute;
    left:15px;
    top:30px;
    width:6px;
    height:6px;
    border-top: 2px solid $gmenuL1Icon;
    border-right:2px solid $gmenuL1Icon;
    transform: rotate(135deg);
}

/*== 2・3階層目の共通設定 */

/*下の階層を持っているulの指定*/
.gmenu li.has-child ul{
    /*絶対配置で位置を指定*/
    position: absolute;
    left:0;
    top:62px;
    z-index: 4;
    /*形状を指定*/
    background:$gmenu2Bg;
    width:180px;
    /*はじめは非表示*/
    visibility: hidden;
    opacity: 0;
    /*アニメーション設定*/
    transition: all .3s;
}

/*hoverしたら表示*/
.gmenu li.has-child:hover > ul,
.gmenu li.has-child ul li:hover > ul,
.gmenu li.has-child:active > ul,
.gmenu li.has-child ul li:active > ul{
    visibility: visible;
    opacity: 1;
}

/*ナビゲーションaタグの形状*/
.gmenu li.has-child ul li a{
    color: $gmenuL2LinkColor;
    border-bottom:solid 1px $gmenuL2PcSpLine;
}

.gmenu li.has-child ul li:last-child a{
    border-bottom:none;
}

.gmenu li.has-child ul li a:hover,
.gmenu li.has-child ul li a:active{
	background:$gmenu2BgAc;
}

/*==768px以下の形状*/



/*========= 検索窓を開くための虫眼鏡ボタン設定 ===========*/

$InputColor: #eee;
$InputBorder: #555;
$InputBg: #333;
$InputForcus: #111;
$InputValid: #333;
$InputInValid: #e33;

$SearchBoxBg: #222;

$SearchPannelBg: #111;

$CloseBtnBg: #eee;

.open-btn{
    position: absolute;
    top:10px;
    right:10px;
    background:$SearchBoxBg url("../img/icon_search.svg") no-repeat 15px center;/*虫眼鏡アイコンを背景に表示*/
    background-size: 20px 20px;
    width: 50px;
    height :50px;
    border-radius: 50%;
    cursor: pointer;
}

/*========= 検索窓の設定 ===============*/

/*==検索窓背景のエリア*/

#search-wrap{
    position:fixed;/*固定配置にして*/
    top: 0;
    left: 0;
    z-index: -1;/*最背面に設定*/
    opacity: 0;/*透過を0に*/
    transition: all 0.4s;/*transitionを使ってスムースに現れる*/
    width:100%;
    height: 100vh;
}

/*ボタンクリック後、JSで#search-wrapに panelactive クラスが付与された後の見た目*/
#search-wrap.panelactive{
    opacity: 1;/*不透明に変更*/
    z-index: 9999;/*全面に出現*/
    background:$SearchPannelBg;
    /*中の要素を天地中央揃えにする設定*/
    display: flex;
    justify-content: center;
    align-items: center;
}

/*==検索窓のエリア*/

#search-wrap .search-area{
    display: none;/*検索窓のエリアは、はじめ非表示*/
}

/*ボタンクリック後、JSで#search-wrapに panelactive クラスが付与された後*/
#search-wrap.panelactive .search-area{
    display: block;/*検索窓エリアを表示*/
    width:80%;
    position: relative;
}

/*==検索フォームの設定*/

#search-wrap form{
    position: relative;
    height: 66px;
}

/*==テキスト入力とボタンinput共通設定*/
#search-wrap input{
    -webkit-appearance:none;/*SafariやChromeのデフォルトの設定を無効*/
    outline: none;
    cursor: pointer;/*カーソルを指マークに*/
    color: $InputColor;
}

/*テキスト入力input設定*/
 #search-wrap input[type="text"] {
    width: 100%;
    padding: 20px;
    border: none;
    border-bottom:2px solid $InputBorder;
    transition: all 0.5s;
    letter-spacing: 0.05em;
    background: $InputBg;
}

#search-wrap input[type="text"]:focus {
    background:$InputForcus;
}

#search-wrap input[type="text"]:valid{
    background:$InputValid;
}
#search-wrap input[type="text"]:invalid{
    background:$InputInValid;
}

/*ボタンinput設定*/
 #search-wrap input[type="submit"]{
    position: absolute;
    top:0;
    right:10px;
    background:url("../img/icon_search.svg") no-repeat 15px center;/*虫眼鏡アイコンを背景に表示*/
    background-size: 25px 25px;
    width:60px;
    height: 60px;
}

/*=======　閉じるための×ボタン　========*/
.close-btn{
    position: absolute;
    top:10px;
    right:10px;
    cursor: pointer;
    width: 60px;
    height:60px;
    z-index: 999;
}
.close-btn span{
    display: inline-block;
    position: absolute;
    left: 14px;
    height: 3px;
    border-radius: 2px;
    background-color: $CloseBtnBg;
 }

/*×マーク*/
.close-btn span:nth-of-type(1) {
    top: 21px;
    left: 16px;
    transform: translateY(6px) rotate(-135deg);
    width: 50%;
}

.close-btn span:nth-of-type(2){
    top: 32px;
    left: 16px;
    transform: translateY(-6px) rotate(135deg);
    width: 50%;
}
/* vidualarea */
#vidual-area{
    position: relative;
    height: 100vh;
    /*
    &::after{
        content:'';
        background:$keyColor;
        width:0;
        height: 12%;
        position: absolute;
        bottom:0;
        right:0;
        z-index: -1;
        animation-name:vidualbgRLextendAnime;
        animation-duration:.2s;
        animation-fill-mode:forwards;
        animation-timing-function: ease-in-out;
        animation-delay: 1s;
    }
    */
    #slider-area{
        position: absolute;
        top:0;
        right: 0;
        width:85%;
        z-index: -1;
    }
    #slider {
        width: 100%;
        height: 91vh;/*スライダー全体の縦幅を91vhにする*/
    }
    h2{
        line-height: 1.5;
        text-transform: uppercase;
        font-size: 3vw;
        position: absolute;
        top:36%;
        left:5%;
        margin: 0 0 50px 0;
    }
    dl{
        position: absolute;
        left:2%;
        bottom:2%;
        color:#aaa;
    }
    dt,
    dd,
    ul,
    ul li{
        display: inline-block;
    }
    dt{
        text-transform: uppercase;
    }
    ul{
        li{
            margin:0 10px;
        }
        img{
            width:20px;
        }
    }
}
body.appear #vidual-area::after{
    content:'';
    background:$keyColor;
    width:0;
    height: 12%;
    position: absolute;
    bottom:0;
    right:0;
    z-index: -1;
    animation-name:vidualbgRLextendAnime;
    animation-duration:.2s;
    animation-fill-mode:forwards;
    animation-timing-function: ease-in-out;
    animation-delay: 1s;
}
@keyframes vidualbgRLextendAnime{
    0% {
        width:0;
    }
    100% {
        width:40%;
    }
}
/*========= スクロールダウンのためのCSS ===============*/

/*====== 9-1-1 縦線が動いてスクロールを促す =======*/



/*スクロールダウン全体の場所*/
.scrolldown1{
    /*描画位置※位置は適宜調整してください*/
    position:absolute;
    right:40px;
    bottom:3%;
    /*全体の高さ*/
    height:50px;
}

/*Scrollテキストの描写*/
.scrolldown1 span{
    /*描画位置*/
    position: absolute;
    left:-15px;
    top: -15px;
    /*テキストの形状*/
    color: #fff;
    font-size: 0.7rem;
    letter-spacing: 0.2em;
}
.scrolldown1 span {
    transform: rotate(-90deg);
    text-transform:uppercase;
    left: -22px;
    top: -31px;
}
/* 線の描写 */
.scrolldown1::after{
    content: "";
    /*描画位置*/
    position: absolute;
    top: 0;
    /*線の形状*/
    width: 1px;
    height: 30px;
    background: #fff;
    /*線の動き1.4秒かけて動く。永遠にループ*/
    animation: pathmove 1.4s ease-in-out infinite;
    opacity:0;
}

/*高さ・位置・透過が変化して線が上から下に動く*/
@keyframes pathmove{
    0%{
        height:0;
        top:0;
        opacity: 0;
    }
    30%{
        height:30px;
        opacity: 1;
    }
    100%{
        height:0;
        top:50px;
        opacity: 0;
    }
}

$openbtnColor: #ddd;

.fixed{
    position:fixed;
    top:10px;
    right: 70px;
    z-index: 1;
}
.openbtn{
    display: none;
    position: relative;
    cursor:crosshair;
    width: 50px;
    height: 50px;
    .openbtn__area{
        transition: all .6s;
    }
    &.active .openbtn__area{
        transform: rotateY(-360deg);
    }
    span{
        display: inline-block;
        transition: all .4s;
        position: absolute;
        left: 20%;
        height: 3px;
        border-radius: 2px;
        background-color: $openbtnColor;
        width: 60%;

    }
    span:nth-of-type(1){
        top:15px;
    }
    span:nth-of-type(2){
        top:23px;
    }
    span:nth-of-type(3){
        top:31px;
    }
    &.active span:nth-of-type(1){
        top: 18px;
        left: 20%;
        transform: translateY(6px) rotate(-135deg);
        width: 60%;
    }
    &.active span:nth-of-type(2){
        opacity: 0;
    }
    &.active span:nth-of-type(3){
        top: 30px;
        left: 20%;
        transform: translateY(-6px) rotate(135deg);
        width: 60%;
    }
}
/* service */
.l-service{
    padding: 10% 0 10% 15%;
    .service-lead{
        letter-spacing: 0.01em;
    }
    .service-area{
        display: flex;
        justify-content: space-between;
        flex-wrap: wrap;
        padding:10% 0 0 10%;
        position: relative;
        &::after{
            opacity: 0;
        }
        &.startwd::after{
            content:'';
            position: absolute;
            top:10%;
            right:0;
            width:80%;
            height: 60vh;
            background:#232323;
            z-index: -1;
            animation-name:sevicebgRLextendAnime;
            animation-duration:.9s;
            animation-fill-mode:forwards;
            animation-timing-function: ease-in-out;
        }
        section{
            width:30%;
            h3{
                font-size:1.5rem;
                margin: 0 0 30px 0;
            }
            p{
                margin: 0 0 30px 0;
                letter-spacing: 0.01em;
            }
            a{
                letter-spacing: 0.01em;
            }
        }
        .service-img-wrapper{
            position:relative;
            overflow: hidden;
            width:30%;
            height: 60vh;
        }
        .service-img{
            height: 60vh;
            background:url("../img/01.jpg") no-repeat center;
            background-size: cover;
        }
    }
}
@keyframes sevicebgRLextendAnime{
    0% {
        opacity: 0;
        width:0;
    }
    100% {
        opacity: 1;
        width:80%;
    }
}
$btnColor: #eee;
$btnAcColor: #fff;
$btnBorderColor: #eee;
$btnBorderColor2: #eee;


/*== 少し出ていた線が伸びる */

.btnlinestretches2{
    /*線の基点とするためrelativeを指定*/
    position:relative;
    /*ボタンの形状*/
    color:$btnColor;
    padding:5px 40px;
    display:inline-block;
    text-decoration: none;
    outline: none;
}

/*線の設定*/
.btnlinestretches2::before,
.btnlinestretches2::after {
    content:'';
    /*絶対配置で線の位置を決める*/
    position:absolute;
    /*事前に出現させる線の形状*/
    border:1px solid $btnBorderColor;
    width:10px;
    height:10px;
    /*アニメーションの指定*/
    transition:all 0.3s ease-in-out;
}

.btnlinestretches2::before{
    /*事前に出現させる線の位置*/
    top:0;
    left:0;
    /*事前に出現させる線の形状*/
    border-width:1px 0 0 1px;
}

.btnlinestretches2::after{
    /*事前に出現させる線の位置*/
    bottom:0;
    right:0;
    /*事前に出現させる線の形状*/
    border-width:0 1px 1px 0;
}

/*hoverした際の線の形状*/
.btnlinestretches2:hover::before,
.btnlinestretches2:hover::after{
    width:calc(100% - 2px);
    height:calc(100% - 2px);
    border-color:$btnBorderColor2;
}

/* news */
.news-img-wrapper{
    position:relative;
    z-index: 1;
    overflow: hidden;
    width:90%;
    height: 60vh;
}
.news-img{
    height: 60vh;
    background:url("../img/02.jpg") no-repeat center;
    background-size: cover;
}
.news-img::after{
     content:'';
    position: absolute;
    bottom:0;
    left:0;
    width:70%;
    height: 10vh;
    background:#000;
    z-index:2;
}

.l-news{
    padding: 0 0 5% 15%;
}


/* --------------------------------------------------------------------------------
Tabのレイアウト
-------------------------------------------------------------------------------- */

$tabMenuColor: #eee;
$tabMenuBg: #333;
$tabMenuBgAc: #000;

$tabSecColor: #eee;

.tab{
    width: 70%;
    letter-spacing: 0.01em;
    &__menu{
        display: flex;
        flex-wrap: wrap;
        position: relative;
        top:1px;
        li{
            text-align: center;
            white-space: nowrap;
        }
    }
    &__btn{
        display: block;
        border-top:transparent 1px solid;
        border-right:#000 1px solid;
        border-left:transparent 1px solid;
        background:$tabMenuBg;
        color: $tabMenuColor;
        padding:8px 30px;
        &--active{
            background:$tabMenuBgAc;
            border-top:#aaa 1px solid;
            border-color:#aaa;
        }
    }
    &__sec{
        display: none;/*はじめは非表示*/
        opacity: 0;/*透過0*/
        color: $tabSecColor;
        padding: 20px 40px;

        li{
            padding: 20px 0;
        }
        time{
            display: block;
            color: #aaa;
        }
        &--active{
            display: block;/*表示*/
            animation-name: displayAnime;/*ふわっと表示させるためのアニメーション*/
            animation-duration: 2s;
            animation-fill-mode: forwards;
        }
    }
    .tab-choice-area{
        border-top:1px solid #aaa;
        border-left:1px solid #aaa;
    }
}
@keyframes displayAnime{
    from {
        opacity: 0;
    }
    to {
        opacity: 1;
    }
}
/* gallery */
.l-gallery{
    margin: 0 0 5% 0;
    columns: 4;
    padding:0 15px;
    li{
        overflow: hidden;
        margin-bottom: 20px;
    }
    img{
        opacity: 0.5;
        width:100%;
        height:auto;
        //以下を表示させるとバグる。
        //vertical-align: bottom;
        vertical-align:top;
    }
    a:hover img{
        opacity: 1;
    }
}

/*　画像拡大＋回転　*/

.zoomInRotate{
    img{
        transform: scale(1);
        transition: .3s ease-in-out;
    }
    a:hover img{
        transform:rotate(5deg) scale(1.2);
    }
}

/*　画像のマスク　*/

.mask{
    display: block;
    line-height: 0;/*行の高さを0にする*/
    overflow: hidden;/*拡大してはみ出る要素を隠す*/
}

/* contact */
.l-contact{
    letter-spacing: 0.01em;
    border-top: 1px solid #aaa;
    border-bottom: 1px solid #aaa;
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    .contact-detail{
        width:65%;
        border-right: 1px solid #aaa;
        text-align: center;
        padding: 20px;
        h2{
            margin:0 0 5px 0;
            font-size: 1.5rem;
        }
    }
    .contact-tel{
        width:35%;
        p{
            text-align: center;
            a{
                display: block;
                padding: 20px;
                transition: all .3s;
                &:hover{
                    background:rgba(255,255,255,0.2);
                }
            }
            &:last-child{
                border-top:1px solid #aaa;
            }
        }
        br{
            display: none;
        }
    }
}
/* footer */
.l-footer{
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
    align-items: center;
    opacity: 0.8;
    padding:5%;
    letter-spacing: 0.01em;
    .footer-info{
        width:30%;
        .footer-logo{
            font-size: 1.5rem;
            margin: 0 0 10px 0;
            text-transform: uppercase;
        }
        address{
            font-style: normal;
            margin: 0 0 10px 0;
        }
        ul{
            li{
                margin: 0 0 10px 0;
            }
        }
        dl{
            dt{
                display: inline-block;
                &::after{
                    content:':';
                    padding: 0 10px;
                }
            }
            dd{
                display: inline-block;
            }

        }
    }
    .footer-link{
        width:65%;
        ul{
            display: flex;
            flex-wrap: wrap;
            line-height: 2.5;
            li{
                margin: 0 20px;
            }
            ul{
                display: block;
                li{
                    margin:0 10px 0 0;
                }
            }
        }
    }
    small{
        padding: 100px 0 0 0;
        display: block;
        text-align: right;
        color: #aaa;
    }
}
#page-top{
    position: fixed;
    right: 10px;
    bottom:10px;
    z-index: 2;
    /*はじめは非表示*/
    opacity: 0;
    transform: translateX(100px);
    a{
        display: flex;
        justify-content:center;
        align-items:center;
        width: 50px;
        height: 50px;
        border:1px solid #adadad;
        color: #fff;
        text-align: center;
        text-transform: uppercase;
        text-decoration: none;
        font-size:0.6rem;
        transition:all 0.3s;
        &:hover{
            background: #777;
        }
    }
    span{
        display: inline-block;
        width: 13px;
        height: 13px;
        border-top:1px solid #fff;
        border-left: 1px solid #fff;
        transform: rotate(45deg);
        margin: 8px 0 0 0;
    }
}
/*　左の動き　*/
#page-top.LeftMove{
    animation: LeftAnime 0.5s forwards;
}

@keyframes LeftAnime{
    from {
        opacity: 0;
        transform: translateX(100px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

/*　右の動き　*/
#page-top.RightMove{
    animation: RightAnime 0.5s forwards;
}
@keyframes RightAnime{
    from {
        opacity: 1;
        transform: translateX(0);
    }
    to {
        opacity: 1;
        transform: translateX(100px);
    }
}
/*==================================================
印象編 4 最低限おぼえておきたい動き
===================================*/

/*印象編　4-9、4-10　背景色が伸びて出現（左から・右から）　*/
.bgextend{
    animation-name:bgextendAnimeBase;
    animation-duration:1s;
    animation-fill-mode:forwards;
    position: relative;
    overflow: hidden;/*　はみ出た色要素を隠す　*/
    opacity:0;
}

@keyframes bgextendAnimeBase{
    from {
        opacity:0;
    }

    to {
        opacity:1;
    }
}

/*中の要素*/
.bgappear{
    animation-name:bgextendAnimeSecond;
    animation-duration:1s;
    animation-delay: 0.6s;
    animation-fill-mode:forwards;
    opacity: 0;
}

@keyframes bgextendAnimeSecond{
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

/*印象編　4-9 背景色が伸びて出現（左から）*/
.bgLRextend::before{
    animation-name:bgLRextendAnime;
    animation-duration:1s;
    animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #111;/*伸びる背景色の設定*/
}
@keyframes bgLRextendAnime{
    0%{
        transform-origin:left;
        transform:scaleX(0);
    }
    50%{
        transform-origin:left;
        transform:scaleX(1);
    }
    50.001%{
        transform-origin:right;
    }
    100%{
        transform-origin:right;
        transform:scaleX(0);
    }
}

/*印象編　4-9 背景色が伸びて出現（右から）*/
.bgRLextend::before{
    animation-name:bgRLextendAnime;
    animation-duration:1s;
    animation-fill-mode:forwards;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: #111;/*伸びる背景色の設定*/
}
@keyframes bgRLextendAnime{
    0% {
        transform-origin:right;
        transform:scaleX(0);
    }
    50% {
        transform-origin:right;
        transform:scaleX(1);
    }
    50.001% {
        transform-origin:left;
    }
    100% {
        transform-origin:left;
        transform:scaleX(0);
    }
}

/* スクロールをしたら出現する要素にはじめに透過0を指定　*/
.bgappearTrigger,
.bgUDextendTrigger,
.bgDUextendTrigger,
.bgRLextendTrigger,
.bgLRextendTrigger{
    opacity: 0;
}
@media screen and (max-width:1200px){
    .gmenu{
        ul{
            li{
                &.has-child::before{
                    left:0;
                }
                a{
                    padding:20px;
                }
                li{
                    a{
                        padding:10px 20px;
                    }
                }
            }
        }
    }
}
@media only screen and (max-width: 1110px) {
    .tab{
        width:100%;
    }
}
@media screen and (max-width: 960px){
    .l-header,
    .l-header.UpMove,
    .l-header.DownMove{
        animation:none;
        height: auto;
        padding: 0;
        display: block;
    }
    .gmenu{
        li{
            a::after{
                height: 0px;
            }
        }
    }
    #g-nav{
        /*position:fixed;にし、z-indexの数値を大きくして前面へ*/
        position:fixed;
        //z-index: 999;
        /*ナビのスタート位置と形状*/
        top:-120%;
        left:0;
        width:100%;
        height: 100vh;/*ナビの高さ*/
        background:rgba(0,0,0,0.8);
        /*動き*/
        transition: all 0.6s;
    }

    /*アクティブクラスがついたら位置を0に*/
    #g-nav.panelactive{
        top: 0;
    }

    /*ナビゲーションの縦スクロール*/
    #g-nav.panelactive #g-nav-list{
        /*ナビの数が増えた場合縦スクロール*/
        position: fixed;
        z-index: 999; 
        width: 100%;
        height: 100vh;/*表示する高さ*/
        overflow: auto;
        -webkit-overflow-scrolling: touch;
    }

    /*ナビゲーション*/
    #g-nav ul {
        /*ナビゲーション天地中央揃え*/
        width: 90%;
        margin:100px auto 0 auto;
    }
    #g-nav ul ul{
        width: 100%;
        margin: 0;
    }
    #g-nav ul li.has-child ul{
        position: relative;
        left:0;
        top:0;
        width:100%;
        visibility:visible;/*JSで制御するため一旦表示*/
        opacity:1;/*JSで制御するため一旦表示*/
        display: none;/*JSのslidetoggleで表示させるため非表示に*/
        transition:none;/*JSで制御するためCSSのアニメーションを切る*/
        transform: none;
    }
    /*リストのレイアウト設定*/

    #g-nav li{
        list-style: none;
        text-align: center;
    }

    #g-nav li a{
        color: #aaa;
        text-decoration: none;
        padding:10px;
        display: block;
        text-transform: uppercase;
        letter-spacing: 0.1em;
        font-weight: bold;
    }
    .openbtn{
        display: block;
    }
    .logo{
        position: absolute;
        top:22px;
        left:20px;
        padding: 0;
    }
    .gmenu{
        padding: 0;
        ul{
            display: block;
            li{
                a{
                    border-bottom:1px solid #ccc;
                }
                &.has-child::before{
                    left:20px;
                }
                &.has-child.active::before{
                    transform: rotate(-45deg);
                }
            }
            ul{
                li{
                    &.has-child::before{
                        transform: rotate(135deg);
                        left:20px;
                    }
                }
            }
        }
    }
    .l-vidual{
        height: 90vh;
        #slider-area{
            width:100%;
            height: 90vh;
        }
        h2{
            font-size:2.1rem;
        }
        dl{
            left:20px;
            bottom:16px;
        }
        ul{
            li{
                margin:0 2px;
            }
        }
    }
}

@media screen and (max-width: 830px){
    .l-footer{
        justify-content: center;
        padding:5% 0;
        .footer-info{
            width:100%;
            padding: 0 0 5% 0;
            margin: 0 0 5% 0;
            text-align: center;
            border-bottom: 1px solid #aaa;
            li:nth-of-type(2) dt::after{
                content:'';
                padding: 0;
            }
            li:nth-of-type(2) dd{
                display: block;
            }
        }
        .footer-link{
            width:auto;
            ul{
                justify-content: center;
            }
            small{
                padding:10% 0;
                text-align:center;
            }
        }
    }
}
@media screen and (max-width:768px){
    .gmenu{
        padding: 0;
    }

    .gmenu ul{
        display: block;
    }

    .gmenu li.has-child ul,
    .gmenu li.has-child ul ul{
        position: relative;
        left:0;
        top:0;
        width:100%;
        visibility:visible;/*JSで制御するため一旦表示*/
        opacity:1;/*JSで制御するため一旦表示*/
        display: none;/*JSのslidetoggleで表示させるため非表示に*/
        transition:none;/*JSで制御するためCSSのアニメーションを切る*/
    }
    .gmenu ul li a{
        //border-bottom:1px solid $gmenuSpLine;
    }

/*矢印の位置と向き*/

    .gmenu ul li.has-child::before{
        left:20px;
    }

    .gmenu ul ul li.has-child::before{
        transform: rotate(135deg);
        left:20px;
    }
    
    .gmenu ul li.has-child.active::before{
        transform: rotate(-45deg);
    }
    .l-service{
        padding: 30% 0 10% 30px;
    }
    .l-news{
        padding: 0 0 5% 30px;
    }
}
@media screen and (max-width: 690px){
    .l-contact{
        .contact-detail,
        .contact-tel{
            width:50%;
        }
        .contact-detail{
            h2{
                font-size: 1.2rem;
            }
            p{
                text-align: left;
            }
        }
        .contact-tel{
            br{
                display: block;
            }
        }
    }
}
@media screen and (max-width: 600px){
    .l-gallery{
        columns: 2;
    }
}
@media screen and (max-width:570px){
    .l-service{
        .service-area{
            section{
                width:100%;
                margin: 0 0 100px 0;
                padding: 0 10% 0 0;
            }
            .service-img-wrapper,
            .service-img{
                width:100%;
                height: 40vh;
                background-position: right;
            }
            .service-img-wrapper{
                margin:0 0 50px 0;
            }
        }
    }
}
@media screen and (max-width:500px){
    .l-service{
        .service-lead{
            padding: 0 10% 0 0;
            br{
                display: none;
            }
        }
    }
}
@media screen and (max-width:450px){
    .l-vidual{
        h2{
            font-size:7vw;
            top: inherit;
            bottom: 13%;
        }
    }
}
@media screen and (max-width: 420px){
    
}
@media screen and (max-width: 400px){
    .tab{
        &__btn{
            padding:8px 20px;
        }
    }
    .l-contact{
        font-size: 0.8rem;
    }
    .l-footer{
        .footer-link{
            ul{
                li{
                    margin: 0 10px;
                }
            }
        }
    }
}
@media screen and (max-width: 380px){
    
}
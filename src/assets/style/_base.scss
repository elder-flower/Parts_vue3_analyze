@use 'variables';

*,
*::before,
*::after {
  box-sizing: border-box;
}

/* 基本 */
:root {
  --v-space: clamp(90px, 9vw, 120px);
  --bg: #000;
  --font-color: #eee;
}

html {
  // スクロールをスムーズにする。
  -webkit-overflow-scrolling: touch;

  // ページ内スクロール
  scroll-behavior: smooth;

  // 一部のモバイル端末で使われる、テキストの自動拡大アルゴリズムを制御します。iOS Safariで傾けた時。
  //-webkit-text-size-adjust: 100%;

  // touch-action は CSS のプロパティで、タッチ画面のユーザーが要素のある領域をどのように操作できるか
  //（例えば、ブラウザー内に組み込まれたパンまたはズーム機能）を設定します。
  //touch-action: manipulation;
  //「touch-action: pan-x pan-y pinch-zoom;」 の別名。

  // SVG用の設定。
  //ブラウザーはテキストを描画する際に、速さ、読みやすさ、位置の正確さの最適化について経験的な推測を行います。この値のブラウザーによる解釈の違いについては、ブラウザーの対応をご覧ください。
  //text-rendering: auto;

  //ブラウザーは文字を描画する際に、読みやすさや位置の正確さよりも、速さを強調します。カーニングや合字を無効にします。
  //text-rendering: optimizeSpeed;

  //text-rendering: geometricPrecision;

  //ブラウザーは速さや位置の正確さよりも、読みやすさを強調します。カーニングを有効にし、合字は任意です。
  text-rendering: optimizeLegibility;
  // / SVG用の設定。
}
body {
  // CSS の overscroll-behavior プロパティは、スクロール領域の境界に達したときにブラウザーが何をするかを設定します。
  // 「スクロールチェーン」などに対応する。
  overscroll-behavior: contain;

  // touch-action は CSS のプロパティで、タッチ画面のユーザーが要素のある領域をどのように操作できるか（例えば、ブラウザー内に組み込まれたパンまたはズーム機能）を設定します。
  touch-action: manipulation;

  // 文字詰め出来る。
  -webkit-font-feature-settings: 'palt' 1;
  font-feature-settings: 'palt' 1;

  // font-kerning CSS プロパティはフォントに存在するカーニング情報の使用を制御します。
  //font-kerning: normal;

  // font-smooth は CSS のプロパティで、フォントが描画されるときのアンチエイリアスの適用を制御します。
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;

  //iOSのSafariなどの一部の端末では、テキストの自動拡大アルゴリズムによって一部の文字サイズが勝手に大きくレンタリングされる事があります。
  //それを防ぐ為にbody要素に以下を設定します。
  //スマホを横にしたときに文字が大きくないようにする
  -webkit-text-size-adjust: 100%;

  /*
    word-break: break-word;
    overflow-wrap: break-word;
    word-wrap: break-word;
  */

  font-family: sans-serif;
  background: var(--bg);

  color: var(--font-color);
  //line-height: 1.85;
  position: relative;
  margin: 0;

  //bottom: calc(env(safe-area-inset-bottom) + 5%);
}
a {
  // ボタンアニメーションの際に「overflow: hidden」が隠す場合もある。
  //overflow: hidden;
  outline: none;
  //color: $fontColor;
  color: inherit;
  text-decoration: none;
  //cursor: crosshair;
  //-webkit-tap-highlight-color: transparent;

  // iOS safari環境でタッチ時のコールアウトをオフにする。
  -webkit-touch-callout: none;
}
/*
@media (hover: hover){
    
}
*/
@media (pointer: fine) {
  a:link {
    text-decoration: none;
  }
  a:visited {
    text-decoration: none;
  }
  a:hover {
    text-decoration: none;
  }
  a:active {
    text-decoration: none;
  }
}
/*IE11用ハック*/
/*
_:-ms-lang(x)::-ms-backdrop, a:link{
    text-decoration: none;
}
_:-ms-lang(x)::-ms-backdrop, a:visited{
    text-decoration: none;
}
_:-ms-lang(x)::-ms-backdrop, a:hover{
    text-decoration: underline;
}
_:-ms-lang(x)::-ms-backdrop, a:active{
    text-decoration: underline;
}
*/
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
li {
  list-style: none;
}
img {
  max-width: 100%;
  height: auto;
  vertical-align: bottom;
}
p {
  // 既定の改行規則を使用してテキストを改行します。初期値。
  //line-break: auto;

  // 最も制限の少ない改行規則を使用してテキストを改行します。一般的に、新聞などの短い行に使用されます。
  //line-break: loose;

  // 最も一般的な改行規則を使用してテキストを改行します。
  //line-break: normal;

  // 最も厳格な改行規則を使用してテキストを改行します。
  line-break: strict;

  // 句読点や温存された空白、単語の途中も含め、すべての文字の間で折り返しできるようにし、 GL, WJ, ZWJ の文字クラスや、 word-break プロパティでもたらされる折り返しの禁止を一切無視します。どの折り返しの機会も優先されることはありません。ハイフネーションは適用されません。
  // line-break: anywhere;
}

// reset.css を使わない場合。
/*
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
*/
